#!/bin/bash
set -e

# This script provide a PostgreSQL account and echo a DATABASE_URL variable with database access
POSTGRES_USER=postgres

app=$1

# Execute an SQL command
sql(){
  local command=$1
  sudo -u $POSTGRES_USER psql --command "$command" &> /dev/null
}

# Load the cache to find if an app already has credentials
# If a cache file is found print the DATABASE_URL
load_cache(){
  tmp=$(dirname $0)/../tmp
  mkdir -p ${tmp}/credentials
  for cached in ${tmp}/credentials/*; do
    if [ "$(basename $cached)" == "$app" ]; then
      echo $(cat $cached)
      return 0
    fi
  done
  return 1
}

# Create a database and an associed user account
create_account(){
  name=$1
  password=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c10)
  sql "CREATE USER ${name} WITH PASSWORD '${password}';"
  sql "CREATE DATABASE ${name};"
  sql "GRANT ALL PRIVILEGES ON DATABASE ${name} TO ${name};"
}

# Generate and print the DATABASE_URL env var.
# Cache the credential as well.
print_database_url(){
  url="DATABASE_URL=postgres://${name}:${password}@${SERVICE_POSTGRESQL_HOST:=127.0.0.1}/${name}"
  echo $url > $tmp/credentials/$app
  echo $url
}

if ! load_cache $app; then
  create_account $app
  print_database_url
fi